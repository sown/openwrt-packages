#!/bin/ash 

. /etc/sown/constants.sh
. /etc/sown/functions.sh

# Should we start the tunnel
if [ "`uci get locations.sown_home.auth_type`" = "tunnel" ]; then
	# Is the openvpn endpoint reachaable?
	REACHABLE="no";
	TUNNEL_OK="no";
	ENDPOINTS=`uci get openvpn.sown_tunnel.remote | tr ' ' '\n' | grep "\." | sed "s/'//g"`
		
	for SERVER in $ENDPOINTS; do
		ping -c 4 $SERVER && REACHABLE="yes";
	done

	ping -c 4 10.13.0.239 && TUNNEL_OK="yes";

	# Check if we should change the tunnel config?
	if [ "$TUNNEL_OK" = "no" ]; then
		# log that we ran while the tunnel wasn't working
		/bin/date >>  $TUNNEL_STARTUP_LOG
		
		  T=`wc -l $TUNNEL_STARTUP_LOG  | cut -d ' ' -f 1`
		  if [ $T -ge 6 ]; then
			# Flip the tunnel protocol
			echo "maintain_sown_tunnel: Reconfiguring tunnel" | logger

			/etc/init.d/openvpn stop

			PROTO=`uci get openvpn.sown_tunnel.proto`;
			if [ $PROTO = "udp" ]; then
				uci set openvpn.sown_tunnel.proto=tcp
			else
				uci set openvpn.sown_tunnel.proto=udp
			fi
			
			# Clobber the hash and last_modified
			uci set openvpn.@meta[0].hash="Clobbered"
			uci set openvpn.@meta[0].last_modified=4
			  
			uci commit

			/etc/init.d/openvpn start

			exit 0;
		  fi
	else
		# Tunnel is up - remove the startup log
		rm $TUNNEL_STARTUP_LOG
	fi


	if [ "$REACHABLE" = "no" ] ; then
		# Take the tunnel down
		echo "maintain_sown_tunnel: Server endpoint not reachable" | logger
		echo "maintain_sown_tunnel: Stopping tunnel" | logger
		/etc/init.d/openvpn stop
		
		# openvpn isn't too reliable at running this:
		`uci get openvpn.sown_tunnel.down`
	else
		# Make sure the tunnel is up
		pgrep openvpn > /dev/null
		if [ "$?" = "1" ]; then
			# start the tunnel
			echo "maintain_sown_tunnel: Starting tunnel" | logger
			/etc/init.d/openvpn stop
			/etc/init.d/openvpn start
		fi
	fi
fi

