#!/bin/ash
. /etc/sown/functions.sh

# get MAC address
MAC=`ifconfig eth0 | sed -n 's/.*\([0-9a-fA-F]\{2\}\(\:[0-9a-fA-F]\{2\}\)\{5\}\).*/\1/p'`

date="$( max \
	`get_file_mtime_safe /etc/passwd` \
	`get_file_mtime_safe /etc/sown/client.key` \
	`get_file_mtime_safe /etc/sown/client.crt` \
	`get_file_mtime_safe /etc/dropbear/authorized_keys` )"

date=`date '+%a, %d %b %Y %T %Z' -d @$date`

firstrun_url=`uci -q get sown_core.@node[0].firstrun_url`

if [ -z "$firstrun_url" -o -n "${IN_COMPLETE_SETUP}" ]; then

	extra_curl_options="header = 'If-Modified-Since: $date'"

	TMPDATADIR=`download_package_uri sown_openwrt_core 0.1.271 credentials archive "mac=$MAC" "$extra_curl_options"`

	chown -R root:root $TMPDATADIR # Make sure all files are owned by root

	if [ $? -eq 0 ]; then
		if [ -e $TMPDATADIR/client.crt ]; then
			mv "$TMPDATADIR/client.crt" /etc/sown/client.crt
		fi;
		if [ -e $TMPDATADIR/client.key ]; then
			mv "$TMPDATADIR/client.key" /etc/sown/client.key
		fi;
		if [ -e $TMPDATADIR/passwd ]; then
			mv "$TMPDATADIR/passwd" /etc/passwd
		fi;
		if [ -e $TMPDATADIR/authorized_keys ]; then
			mv "$TMPDATADIR/authorized_keys" /etc/dropbear/authorized_keys
			chmod 0700 /etc/dropbear
			chmod 0600 /etc/dropbear/authorized_keys
		fi;
		chmod go-rwx /etc/sown/client.*
	
		rm -rf "$TMPDATADIR"
	fi

	if [ ! -e /etc/sown/client.crt ] || [ ! -e /etc/sown/client.key ] ; then
		return 1
	fi
else
	interface=`ip r | grep default | awk '{print $5;}'`
	mac=`ip link show ${interface} | grep 'link/ether' | awk '{print $2;}'`
	nonce=`get_client_nonce`

    if [ -z "${mac}" ]; then
        mac="$MAC"
    fi

	TMPFILE=`download_url ${firstrun_url} "mac=${mac}&nonce=${nonce}" "--cacert /etc/ssl/certs/ISRG_Root_X1.pem"`
	res=$?
	if [ $res -eq 0 ]; then
		# Success, we got something, find out what we got
		statuscode=`cat ${TMPFILE}.headers | head -1 | awk '{print $2;}'`
		if [ "$statuscode" == "200" ]; then
			TMPDATADIR=` mktemp -d -t`
			tar -xz -f "$TMPFILE" -C "$TMPDATADIR"
			rm -f "$TMPFILE" "$TMPFILE.headers"

            chown -R root:root $TMPDATADIR

			# We will only EVER get a client cert and key, plus tunnel config from this - nothing more.
			if [ -e $TMPDATADIR/client.crt ]; then
				mv "$TMPDATADIR/client.crt" /etc/sown/client.crt
			fi;
			if [ -e $TMPDATADIR/client.key ]; then
				mv "$TMPDATADIR/client.key" /etc/sown/client.key
			fi;
			if [ -e $TMPDATADIR/openvpn ]; then
				mv "$TMPDATADIR/openvpn" /etc/config/openvpn
			fi;
			if [ -e $TMPDATADIR/hosts ]; then
				mv "$TMPDATADIR/hosts" /etc/hosts
			fi;
			if [ -e $TMPDATADIR/shadow ]; then
				mv "$TMPDATADIR/shadow" /etc/shadow
			fi;
			if [ -e $TMPDATADIR/authorized_keys ]; then
				mv "$TMPDATADIR/authorized_keys" /etc/dropbear
				chmod 0700 /etc/dropbear
				chmod 0600 /etc/dropbear/authorized_keys
			fi;
			rm -rf $TMPDATADIR

			/etc/init.d/openvpn restart
			/usr/sbin/complete_setup
		else
			uci set crontabs.setup.enabled='true'
			if [ $? -ne 0 ]; then
				group_name=`uci add crontabs feature`
				uci rename crontabs.${group_name}='setup'
				uci set crontabs.setup.command='*/5 * * * * /etc/sown/configure_scripts/available/credentials'
				uci set crontabs.setup.enabled='true'
			fi
			uci commit
		fi
		update_crontabs
	fi
fi
